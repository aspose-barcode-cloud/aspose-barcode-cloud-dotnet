// --------------------------------------------------------------------------------------------------------------------
// <copyright company="Aspose" file="DataMatrixParams.cs">
//   Copyright (c) 2023 Aspose.BarCode for Cloud
// </copyright>
// <summary>
//   Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
// </summary>
// --------------------------------------------------------------------------------------------------------------------

//
// This source code was auto-generated by AsposeBarcodeCloudCodegen.
//

using System;
using System.Collections.Generic;
using Aspose.BarCode.Cloud.Sdk.Interfaces;
using Aspose.BarCode.Cloud.Sdk.Internal;

namespace Aspose.BarCode.Cloud.Sdk.Model
{

    /// <summary>
    ///     DataMatrix parameters.
    /// </summary>
    public class DataMatrixParams : IToString
    {
        /// <summary>
        ///     Datamatrix ECC type. Default value: DataMatrixEccType.Ecc200.
        /// </summary>
        public DataMatrixEccType? DataMatrixEcc { get; set; }

        /// <summary>
        ///     Encode mode of Datamatrix barcode. Default value: DataMatrixEncodeMode.Auto.
        /// </summary>
        public DataMatrixEncodeMode? DataMatrixEncodeMode { get; set; }

        /// <summary>
        ///     Macro Characters 05 and 06 values are used to obtain more compact encoding in special modes. Can be used only with DataMatrixEccType.Ecc200 or DataMatrixEccType.EccAuto. Cannot be used with EncodeTypes.GS1DataMatrix Default value: MacroCharacters.None.
        /// </summary>
        public MacroCharacter? MacroCharacters { get; set; }

        /// <summary>
        ///     Height/Width ratio of 2D BarCode module
        /// </summary>
        public double? AspectRatio { get; set; }

        /// <summary>
        ///     Encoding of codetext.
        /// </summary>
        public string TextEncoding { get; set; }

        /// <summary>
        ///     DEPRECATED: Will be replaced with 'DataMatrix.Version' in the next release  Columns count.
        /// </summary>
        [System.Obsolete("Will be replaced with 'DataMatrix.Version' in the next release  Columns count.", false)]
        public int? Columns { get; set; }

        /// <summary>
        ///     DEPRECATED: Will be replaced with 'DataMatrix.Version' in the next release  Rows count.
        /// </summary>
        [System.Obsolete("Will be replaced with 'DataMatrix.Version' in the next release  Rows count.", false)]
        public int? Rows { get; set; }

        /// <summary>
        ///     Get the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            return _srcString ?? SerializationHelper.Serialize(this);
        }

        private string _srcString;
        /// <summary>
        ///   Set the string presentation of the object
        /// </summary>
        public void SetSrcString(string value)
        {
            _srcString = value;
        }
    }
}
