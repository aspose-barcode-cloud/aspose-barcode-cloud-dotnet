// --------------------------------------------------------------------------------------------------------------------
// <copyright company="Aspose" file="CaptionParams.cs">
//   Copyright (c) 2022 Aspose.BarCode for Cloud
// </copyright>
// <summary>
//   Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
// </summary>
// --------------------------------------------------------------------------------------------------------------------

//
// This source code was auto-generated by AsposeBarcodeCloudCodegen.
//

using System;
using System.Collections.Generic;
using System.Text;

namespace Aspose.BarCode.Cloud.Sdk.Model
{

    /// <summary>
    ///     Caption
    /// </summary>
    public class CaptionParams
    {
        /// <summary>
        ///     Text alignment.
        /// </summary>
        public TextAlignment? Alignment { get; set; }

        /// <summary>
        ///     Caption text.
        /// </summary>
        public string Text { get; set; }

        /// <summary>
        ///     Text color.
        /// </summary>
        public string Color { get; set; }

        /// <summary>
        ///     Is caption visible.
        /// </summary>
        public bool? Visible { get; set; }

        /// <summary>
        ///     Font.
        /// </summary>
        public FontParams Font { get; set; }

        /// <summary>
        ///     Padding.
        /// </summary>
        public Padding Padding { get; set; }

        /// <summary>
        ///     Specify word wraps (line breaks) within text. Default value: false.
        /// </summary>
        public bool? NoWrap { get; set; }

        /// <summary>
        ///     Get the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CaptionParams {\n");
            sb.Append("  Text: ").Append(Text).Append("\n");
            sb.Append("  Alignment: ").Append(Alignment).Append("\n");
            sb.Append("  Color: ").Append(Color).Append("\n");
            sb.Append("  Visible: ").Append(Visible).Append("\n");
            sb.Append("  Font: ").Append(Font).Append("\n");
            sb.Append("  Padding: ").Append(Padding).Append("\n");
            sb.Append("  NoWrap: ").Append(NoWrap).Append("\n");
            sb.Append("}\n");

            return sb.ToString();
        }
    }
}
